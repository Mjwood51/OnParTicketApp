@model OnParTicketApp.Models.ViewModels.Shop.ProductVM

@{
    ViewBag.Title = "Edit Listing";
}

<h2>Edit Listing</h2>

<div>
    @Html.ActionLink("Back to Listings", "Products")
</div>

<style>
    input#ImageName {
        display: none;
    }

    input#PdfName {
        display: none;
    }
</style>

@if (TempData["SM"] != null)
{
    <div class="alert alert-success">
        @TempData["SM"]
    </div>
}

@using (Html.BeginForm("EditProduct", "Shop", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="HasSideBar">Category</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, Model.Categories, new { @class = "form-control", @readonly = "true" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="HasSideBar">Image</label>
            <div class="col-md-10">
                <img src='@Url.Action("GetImage", "Shop", new { id = Model.Id})' width="200" height="200" />
                <br /><br />
                <img id="imgpreview" src="#" />
                <br /><br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReservationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReservationDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ReservationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="HasSideBar">Is Verified</label>
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Verified, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Verified, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit Product" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Listings", "Products")
</div>

@section Scripts{

    <script>

        $(function () {

            /*
             *Preview selected image
             */

            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $("img#imgpreview")
                            .attr("src", e.target.result)
                            .width(200).height(200);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }

            $("#Picture").change(function () {
                readURL(this);
            });
            //////////////////////////////////////////////////////


        });
    </script>

}

